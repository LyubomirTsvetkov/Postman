{
	"info": {
		"_postman_id": "96f81095-b04c-4b0f-b8e7-daeda5266c39",
		"name": "GitHubDemo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25291809"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get_All_Issues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();\r",
									"pm.test(\"Not include\", function () {\r",
									"    pm.expect(body[0].title).to.not.include(\"Postman\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.github.com/repos/lyubomirtsvetkov/postman/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"lyubomirtsvetkov",
								"postman",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Github_Single_Issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();\r",
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"})\r",
									"pm.test(\"Check status\", function () {\r",
									"    pm.expect(pm.response.status).to.equal(\"OK\");\r",
									"})\r",
									"pm.test(\"Check status code ES6\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"})\r",
									"pm.test(\"Check status code other way\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"})\r",
									"pm.test(\"Check body length\", () => {\r",
									"    pm.expect(body.length).to.equal(6);\r",
									"})\r",
									"pm.test(\"Check issue URL\", ()=>{\r",
									"     pm.expect(body.url,\"URL property\").to.equal(\"https://api.github.com/repos/LyubomirTsvetkov/Postman/issues/5\");\r",
									"})\r",
									"pm.test(\"Check issue number\", ()=>{\r",
									"     pm.expect(body.number,\"Number property\").to.equal(5);\r",
									"})\r",
									"pm.test(\"Check bodu ID\", ()=>{\r",
									"     pm.expect(body.id,\"ID property\").to.equal(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.github.com/repos/lyubomirtsvetkov/postman/issues/5",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"lyubomirtsvetkov",
								"postman",
								"issues",
								"5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create_New_Issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();\r",
									"let number = body.number;\r",
									"\r",
									"\r",
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"})\r",
									"pm.test(\"Check status\", function () {\r",
									"    pm.expect(pm.response.status).to.equal(\"Created\");\r",
									"})\r",
									"pm.test(\"Check status code ES6\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"})\r",
									"pm.test(\"Check status code other way\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"})\r",
									"pm.test(\"Check body length\", () => {\r",
									"    pm.expect(body.length).to.equal(6);\r",
									"})\r",
									"pm.test(\"Check issue URL\", ()=>{\r",
									"     pm.expect(body.url,\"URL property\").to.equal(\"https://api.github.com/repos/LyubomirTsvetkov/Postman/issues/\"+number);\r",
									"})\r",
									"pm.test(\"Check issue number\", ()=>{\r",
									"     pm.expect(body.number,\"Number property\").to.greaterThan(5);\r",
									"})\r",
									"pm.test(\"Check body ID\", ()=>{\r",
									"     pm.expect(body.id,\"ID property\").to.greaterThan(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "token",
									"type": "string"
								},
								{
									"key": "username",
									"value": "Lyubomirtsvetkoff@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\" : \"First issue from Postman\"}"
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_Issue_With_labels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "Lyubomirtsvetkoff@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Create new issue with label\",\r\n    \"labels\": [\r\n        \"bug\",\r\n        \"UI\",\r\n        \"user\",\r\n        \"question\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/postman/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"postman",
								"issues"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UPDATE",
			"item": []
		},
		{
			"name": "DELETE",
			"item": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "repo",
			"value": "",
			"type": "string"
		}
	]
}